import barrileteCosmico.*



describe "Barrilete Cósmico" {
	
		var destinosDestacados
		var garlicSea
		var lastToninas
		var silversSea
		var goodAirs
		
		fixture {
			
			garlicSea = new Destino()
			garlicSea.nombre("Garlic´s Sea")
			garlicSea.precio(2500)
			garlicSea.equipaje(["Caña de Pescar", "Piloto"])
			
			silversSea = new Destino()
			silversSea.nombre("Silver's Sea")
			silversSea.precio(1350)
			silversSea.equipaje(["Protector Solar","Equipo de Buceo"])
			
			lastToninas = new Destino()
			lastToninas.nombre("Last Toninas")
			lastToninas.precio(3500)
			lastToninas.equipaje(["Vacuna Gripal","Vacuna B","Necronomicon"])
			
			goodAirs= new Destino()
			goodAirs.nombre("Good Airs")
			goodAirs.precio(1500)
			goodAirs.equipaje(["Cerveza","Protector Solar"])
			
			
			destinosDestacados = [garlicSea, lastToninas]
			barrileteCosmico.destinos([garlicSea,lastToninas,silversSea,goodAirs]) 
			
		}
	
	
	
	test "Los destinos mas importantes del barrilete cosmico"{
		assert.equals(destinosDestacados, barrileteCosmico.obtenerDestinosDestacados())
	}
	
	test "Aplicar 25% de descuento a Last Toninas y obtener un precio de ..."{
		lastToninas.aplicarDescuento(25)
		assert.equals(2625,lastToninas.precio())
	}
	// che aca el test falla porque en el tp dice que da $1125,
	// lo que es imposible porque 3500* ( 1- 0.25) = 2625 (Guido)
	
	
	test "Aplicar 25% de descuento a Last Toninas y adquirir el certificado de descuento"{
		lastToninas.aplicarDescuento(25)
		assert.that(lastToninas.requiereEnElEquipaje("Certificado de Descuento"))
	}
	
	test "Silver's Sea no es un destino peligroso"{
		
	}
	
	test "Aplicando un descuento del 15% a todos los destinos de Barrilete Cosmico se obtienen los precios descontados"{
		
	}
	
	test "Aplicando un descuento del 15% a todos los destinos de Barrilete Cosmico todos obtienen el certificado"{
		
	}	
	
}
