import barrileteCosmico.*

describe "Barrilete Cósmico" {
	
		var destinosDestacados
		var garlicSea
		var lastToninas
		var silversSea
		var goodAirs
		var pabloHari
		
		fixture { 
			
			garlicSea = new Destino()
			garlicSea.nombre("Garlic´s Sea")
			garlicSea.precio(2500)
			garlicSea.equipaje(["Caña de Pescar", "Piloto"])
			
			silversSea = new Destino()
			silversSea.nombre("Silver's Sea")
			silversSea.precio(1350)
			silversSea.equipaje(["Protector Solar","Equipo de Buceo"])
			
			lastToninas = new Destino()
			lastToninas.nombre("Last Toninas")
			lastToninas.precio(3500)
			lastToninas.equipaje(["Vacuna Gripal","Vacuna B","Necronomicon"])
			
			goodAirs= new Destino()
			goodAirs.nombre("Good Airs")
			goodAirs.precio(1500)
			goodAirs.equipaje(["Cerveza","Protector Solar"])
			
			destinosDestacados = [garlicSea, lastToninas]
			barrileteCosmico.destinos([garlicSea,silversSea,lastToninas,goodAirs])
			
			pabloHari = new Usuario()
			pabloHari.nombreDeUsuario("PHari")
			pabloHari.lugaresQueConoce([lastToninas, goodAirs])
			pabloHari.dineroEnCuenta(1500)
			pabloHari.usuariosQueSigue([]) 
			
		}
	
	
	
	test "Los destinos mas importantes del barrilete cosmico son Garlic´s Sea y Last Toninas."{
		assert.equals(destinosDestacados, barrileteCosmico.obtenerDestinosDestacados())
	}
	
	test "Aplicar 25% de descuento a Last Toninas y obtener un precio de 2625."{
		lastToninas.aplicarDescuento(25)
		assert.equals(2625, lastToninas.precio())
	}
			
	test "Aplicar 25% de descuento a Last Toninas y adquirir el certificado de descuento."{
		lastToninas.aplicarDescuento(25)
		assert.that(lastToninas.poseeEnElEquipaje("Certificado de descuento"))
	}
	
	test "Silver's Sea no es un destino peligroso."{
		assert.notThat(silversSea.esPeligroso())
	}
	
	test "Aplicando un descuento del 15% a todos los destinos de Barrilete Cosmico se obtienen los precios descontados."{
		var preciosDeDestinosConDescuento = [2125, 1147.5, 2975, 1275]
		barrileteCosmico.aplicarDescuentosADestinos(15)
		assert.equals(preciosDeDestinosConDescuento, barrileteCosmico.preciosDeLosDestinos())
		}
	
	test "Aplicando un descuento del 15% a todos los destinos de Barrilete Cosmico todos obtienen el certificado."{
		barrileteCosmico.aplicarDescuentosADestinos(15)
		assert.that(barrileteCosmico.todosLosDestinosPoseen("Certificado de descuento"))
	}
	
	test "El destino mas peligroso es Last Toninas."{
		  assert.equals([lastToninas], barrileteCosmico.destinosPeligrosos())
	}
	
	test "Barrilete Cosmico es empresa extrema."{
		assert.that(barrileteCosmico.esEmpresaExtrema())
	}
	
	test "La carta de destinos de Barrilete Cosmico es Last Toninas, Garlic´s sea, Good Airs y Silver's Sea"{
		var cartaDeDestinos = ["Garlic´s Sea","Silver's Sea","Last Toninas","Good Airs"]
		assert.equals(cartaDeDestinos, barrileteCosmico.conocerCartaDeDestinos())
	}
	
	test "Las millas del usuario PHari son 500."{
		assert.equals(500, pabloHari.obtenerKilometros())
	}
	
	test "PHari puede volar a Silver´s Sea."{
		assert.that(pabloHari.puedeViajarA(silversSea))
	}
	
	test "PHari no puede volar a Silver's Sea." {
		pabloHari.descontarDeLaCuenta(1000)
		assert.throwsExceptionWithMessage("No se puede viajar al destino.", { pabloHari.puedeViajarA(silversSea) })
	}
	
	test "PHari realiza un viaje a Silver 's Sea y agrega el lugar a su historial."{
        pabloHari.volarADestino(silversSea)
        assert.that(pabloHari.viajoA(silversSea))
    }
	
	test "PHari posee $150 en su cuenta luego de volar a Silver´s Sea."{
		pabloHari.volarADestino(silversSea)
		assert.equals(150, pabloHari.dineroEnCuenta())
	}
}
